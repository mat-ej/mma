meta:
#    import_tasks_from: features.yaml

    # Extract upstream dependencies from source code. If False, tasks
    # must declare dependencies using the "upstream" key
    extract_upstream: False

    # Extract product from source code. If False, tasks must have a "product" key
    extract_product: False

#executor: serial

tasks:
    - source: scripts/features.py
      name: features
      upstream: null
      product:
        data: products/data/features.csv
        nb: products/nb/features.ipynb
      params:
        filename: '{{PER_MIN_DEBUTS}}'

    - source: src.util.split_train_test_op
      name: split-train-test
      upstream: ['features']
      product:
        train: products/data/train.csv
        test: products/data/test.csv
      params:
        test_ratio: 0.3

    - source: scripts/fit_sklearn_automl.py
      name: autosklearn
      upstream: ['split-train-test']
      product:
        nb: products/reports/fit-sklearn-automl.ipynb
        model: products/models/sklearn-automl.pickle

    - source: scripts/fit_h2o_automl.py
      name: h2o
      upstream: [ 'split-train-test' ]
      product:
        nb: products/reports/fit_h2o_automl.ipynb
        model: products/models/h2o_automl.pickle
      params:
        max_models: 20

#    - source: scripts/fit-h2o.py
#      name: fit-h2o.py
#      upstream: [ 'split-train-test' ]
#      product:
#        nb: products/reports/fit-h2o.ipynb
#        model: products/models/fit-h2o.pickle


#    - source: tasks.fit.fit
#      name: fit-
#      upstream: [ 'features' ]
#      product:
#        model: products/model.pickle
#      # we need to turn this off because parameters depend on the type of model
##      static_analysis: false
#
#      grid:
#      - model: sklearn.ensemble.RandomForestClassifier
#        n_estimators: [5, 10, 20]
#        criterion: [gini, entropy]
#        track: '{{track}}'
#        mlflow_tracking_uri: '{{mlflow_tracking_uri}}'
##      on_finish: hooks.store_report
#
#    - source: scripts/compare.py
#      product: products/compare.ipynb
#      params:
#        mlflow_tracking_uri: '{{mlflow_tracking_uri}}'

#      - model: sklearn.ensemble.AdaBoostClassifier
#        n_estimators: [1, 3, 5]
#        learning_rate: [1, 2]
#      params:
#          model: sklearn.ensemble.RandomForestClassifier
#          model_args:
#            n_estimators: 10
#            criterion: gini
##            params_names: [[n_estimators, criterion]]
